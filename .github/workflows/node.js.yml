# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]
        mongodb-version: ['4.4', '5.0', '6.0']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.7.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: action-mongo-tools
      uses: boly38/action-mongo-tools@v1.0.1
      with:
        mongo-shell: true
        mongo-tools: true
        
    - run: npm ci
      working-directory: backend
    - run: npm run build --if-present
      working-directory: backend
    - run: npm run test
      working-directory: backend
    - run: npm install
      # Start backend in the background and capture the process ID (PID)
    - name: Start Backend in Background
      run: |
        NODE_ENV=integration-test nohup node app.mjs &
        echo $! > backend_pid.txt
      env:
         JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
      working-directory: backend

    # Run frontend tests
    - name: Run Frontend Tests
      run: NODE_ENV=integration-test npm run test
      working-directory: frontend/jsramverk-frontend

    # Kill the backend process after tests
    - name: Stop Backend
      run: |
        kill $(cat backend_pid.txt)
      working-directory: backend
